prooph_event_store:
    stores:
        default:
            event_store: 'app.event_store.default'
            repositories:
                App\Infrastructure\Book\Repository\BookStoreRepository:
                    aggregate_type: App\Domain\Book\Book
                    aggregate_translator: '@Prooph\EventSourcing\EventStoreIntegration\AggregateTranslator'
                App\Infrastructure\Category\Repository\CategoryStoreRepository:
                    aggregate_type: App\Domain\Category\Category
                    aggregate_translator: '@Prooph\EventSourcing\EventStoreIntegration\AggregateTranslator'
                App\Infrastructure\Author\Repository\AuthorStoreRepository:
                    aggregate_type: App\Domain\Author\Author
                    aggregate_translator: '@Prooph\EventSourcing\EventStoreIntegration\AggregateTranslator'
    projection_managers:
        author_projection_manager:
            event_store: Prooph\EventStore\Pdo\MySqlEventStore # event store
            connection: '@Doctrine\DBAL\Driver\PDOConnection'
            event_streams_table:  event_streams
            projections_table:    projections
            projections:
                author_projection:
                    read_model: '@App\Infrastructure\Author\Projection\AuthorReadModel'
                    projection: App\Infrastructure\Author\Projection\AuthorProjection
                book_projection:
                    read_model: '@App\Infrastructure\Book\Projection\BookReadModel'
                    projection: App\Infrastructure\Book\Projection\BookProjection
                category_projection:
                    read_model: '@App\Infrastructure\Category\Projection\CategoryReadModel'
                    projection: App\Infrastructure\Category\Projection\CategoryProjection


services:
    Prooph\EventStore\Pdo\PersistenceStrategy\MySqlSingleStreamStrategy: ~
    Prooph\EventStore\Pdo\PersistenceStrategy: '@Prooph\EventStore\Pdo\PersistenceStrategy\MySqlSingleStreamStrategy'
    Prooph\EventStore\Pdo\MySqlEventStore:
        arguments: ['@prooph_event_store.message_factory', '@Doctrine\DBAL\Driver\PDOConnection', '@Prooph\EventStore\Pdo\PersistenceStrategy\MySqlSingleStreamStrategy']
    PDO: '@Doctrine\DBAL\Driver\PDOConnection'
    Prooph\EventStore\EventStore: '@prooph_event_store.default'
    Prooph\EventSourcing\EventStoreIntegration\AggregateTranslator: ~
    Prooph\SnapshotStore\Pdo\PdoSnapshotStore:
        arguments:
            - 'PDO'
    Prooph\Snapshotter\SnapshotReadModel:
        arguments:
            $aggregateTypes: [App\Domain\Author\Author]
            $aggregateRepository: '@App\Domain\Author\AuthorStore'
            $aggregateTranslator: '@Prooph\EventSourcing\EventStoreIntegration\AggregateTranslator'
            $snapshotStore: '@Prooph\SnapshotStore\Pdo\PdoSnapshotStore'

    read_model_projector.snapshots:
        class: Prooph\EventStore\Pdo\Projection\PdoEventStoreReadModelProjector
        arguments:
            $name: 'snapshots'
            $readModel: '@Prooph\Snapshotter\SnapshotReadModel'
